// Generated by view binder compiler. Do not edit!
package com.android.msd.capstone.project.gardennerds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.msd.capstone.project.gardennerds.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final DrawerLayout drawerMenu;

  @NonNull
  public final FrameLayout frames;

  @NonNull
  public final MaterialToolbar homeToolBar;

  @NonNull
  public final NavigationView navMenu;

  private ActivityHomeBinding(@NonNull DrawerLayout rootView, @NonNull DrawerLayout drawerMenu,
      @NonNull FrameLayout frames, @NonNull MaterialToolbar homeToolBar,
      @NonNull NavigationView navMenu) {
    this.rootView = rootView;
    this.drawerMenu = drawerMenu;
    this.frames = frames;
    this.homeToolBar = homeToolBar;
    this.navMenu = navMenu;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      DrawerLayout drawerMenu = (DrawerLayout) rootView;

      id = R.id.frames;
      FrameLayout frames = ViewBindings.findChildViewById(rootView, id);
      if (frames == null) {
        break missingId;
      }

      id = R.id.homeToolBar;
      MaterialToolbar homeToolBar = ViewBindings.findChildViewById(rootView, id);
      if (homeToolBar == null) {
        break missingId;
      }

      id = R.id.navMenu;
      NavigationView navMenu = ViewBindings.findChildViewById(rootView, id);
      if (navMenu == null) {
        break missingId;
      }

      return new ActivityHomeBinding((DrawerLayout) rootView, drawerMenu, frames, homeToolBar,
          navMenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
