// Generated by view binder compiler. Do not edit!
package com.android.msd.capstone.project.gardennerds.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.android.msd.capstone.project.gardennerds.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnBuynow;

  @NonNull
  public final CardView cvDescription;

  @NonNull
  public final ImageView ivMoreDescription;

  @NonNull
  public final TextView productHighlights;

  @NonNull
  public final TextView productPrice;

  @NonNull
  public final TextView productRating;

  @NonNull
  public final TextView productReviews;

  @NonNull
  public final TextView productTitle;

  @NonNull
  public final ScrollView scrollview;

  @NonNull
  public final TextView sellerLink;

  @NonNull
  public final TextView sellerName;

  @NonNull
  public final TextView sellerPrice;

  @NonNull
  public final TextView sellerTitle;

  @NonNull
  public final LinearLayout sellersList;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvDetails;

  @NonNull
  public final ViewPager2 viewPager;

  private FragmentProductDetailsBinding(@NonNull RelativeLayout rootView, @NonNull Button btnBuynow,
      @NonNull CardView cvDescription, @NonNull ImageView ivMoreDescription,
      @NonNull TextView productHighlights, @NonNull TextView productPrice,
      @NonNull TextView productRating, @NonNull TextView productReviews,
      @NonNull TextView productTitle, @NonNull ScrollView scrollview, @NonNull TextView sellerLink,
      @NonNull TextView sellerName, @NonNull TextView sellerPrice, @NonNull TextView sellerTitle,
      @NonNull LinearLayout sellersList, @NonNull TabLayout tabLayout,
      @NonNull TextView tvDescription, @NonNull TextView tvDetails, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.btnBuynow = btnBuynow;
    this.cvDescription = cvDescription;
    this.ivMoreDescription = ivMoreDescription;
    this.productHighlights = productHighlights;
    this.productPrice = productPrice;
    this.productRating = productRating;
    this.productReviews = productReviews;
    this.productTitle = productTitle;
    this.scrollview = scrollview;
    this.sellerLink = sellerLink;
    this.sellerName = sellerName;
    this.sellerPrice = sellerPrice;
    this.sellerTitle = sellerTitle;
    this.sellersList = sellersList;
    this.tabLayout = tabLayout;
    this.tvDescription = tvDescription;
    this.tvDetails = tvDetails;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_buynow;
      Button btnBuynow = ViewBindings.findChildViewById(rootView, id);
      if (btnBuynow == null) {
        break missingId;
      }

      id = R.id.cv_description;
      CardView cvDescription = ViewBindings.findChildViewById(rootView, id);
      if (cvDescription == null) {
        break missingId;
      }

      id = R.id.iv_more_description;
      ImageView ivMoreDescription = ViewBindings.findChildViewById(rootView, id);
      if (ivMoreDescription == null) {
        break missingId;
      }

      id = R.id.product_highlights;
      TextView productHighlights = ViewBindings.findChildViewById(rootView, id);
      if (productHighlights == null) {
        break missingId;
      }

      id = R.id.product_price;
      TextView productPrice = ViewBindings.findChildViewById(rootView, id);
      if (productPrice == null) {
        break missingId;
      }

      id = R.id.product_rating;
      TextView productRating = ViewBindings.findChildViewById(rootView, id);
      if (productRating == null) {
        break missingId;
      }

      id = R.id.product_reviews;
      TextView productReviews = ViewBindings.findChildViewById(rootView, id);
      if (productReviews == null) {
        break missingId;
      }

      id = R.id.product_title;
      TextView productTitle = ViewBindings.findChildViewById(rootView, id);
      if (productTitle == null) {
        break missingId;
      }

      id = R.id.scrollview;
      ScrollView scrollview = ViewBindings.findChildViewById(rootView, id);
      if (scrollview == null) {
        break missingId;
      }

      id = R.id.seller_link;
      TextView sellerLink = ViewBindings.findChildViewById(rootView, id);
      if (sellerLink == null) {
        break missingId;
      }

      id = R.id.seller_name;
      TextView sellerName = ViewBindings.findChildViewById(rootView, id);
      if (sellerName == null) {
        break missingId;
      }

      id = R.id.seller_price;
      TextView sellerPrice = ViewBindings.findChildViewById(rootView, id);
      if (sellerPrice == null) {
        break missingId;
      }

      id = R.id.seller_title;
      TextView sellerTitle = ViewBindings.findChildViewById(rootView, id);
      if (sellerTitle == null) {
        break missingId;
      }

      id = R.id.sellers_list;
      LinearLayout sellersList = ViewBindings.findChildViewById(rootView, id);
      if (sellersList == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tv_details;
      TextView tvDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvDetails == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentProductDetailsBinding((RelativeLayout) rootView, btnBuynow, cvDescription,
          ivMoreDescription, productHighlights, productPrice, productRating, productReviews,
          productTitle, scrollview, sellerLink, sellerName, sellerPrice, sellerTitle, sellersList,
          tabLayout, tvDescription, tvDetails, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
